{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","place","handleChange","type","placeholder","onChange","autoFocus","App","onSearchField","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","style","textAlign","Component","ReactDOM","render","document","getElementById"],"mappings":"qSAIaA,G,YAAO,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBACIC,IAAI,aACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,gCAAML,EAAMI,QAAQE,KAApB,KACA,+BAAKN,EAAMI,QAAQG,MAAnB,QCNKC,G,MAAW,SAAAR,GAAK,OACzB,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCJ9BQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,aAAT,OACrB,2BACIb,UAAU,aACVc,KAAK,SACLC,YAAaH,EACbI,SAAUH,EACVI,WAAW,MCsEbC,E,YACJ,aAAe,IAAD,8BACZ,+CAeFC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXjB,SAAU,GACVc,YAAa,IAJH,E,iFAUO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEb,SAAUsB,S,+BAOnC,IAAD,EAC2BC,KAAKN,MAA/BjB,EADD,EACCA,SAAUc,EADX,EACWA,YACZU,EAAmBxB,EAASyB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAASb,EAAYY,kBAElD,OACE,yBAAKE,MAAO,CAAEC,UAAW,WACvB,gDACA,kBAAC,EAAD,CAAWzB,MAAM,kBAAkBC,aAAckB,KAAKZ,gBACtD,kBAAC,EAAD,CAAUX,SAAUwB,S,GA9BVM,aAsClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6199c24c.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./card.styles.css\"\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img \n            alt='monsterImg' \n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \n        />\n        <h2> {props.monster.name} </h2>\n        <p> {props.monster.email} </p>\n    </div>\n);\n","import React from \"react\"\nimport { Card } from \"../card/card.component\"\n\nimport \"./card-list.styles.css\"\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n           <Card key={monster.id} monster={monster} />\n         ))}\n    </div>\n);\n","import React from \"react\"\n\nimport \"./search-box.styles.css\"\n\nexport const SearchBox = ({place, handleChange}) => (\n    <input \n        className='search-box'\n        type='search'\n        placeholder={place}\n        onChange={handleChange}\n        autoFocus={true}\n    />\n);\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n// class Board extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       squares: Array(9).fill(null),\n//       xIsNext: true\n//     };\n//   }\n\n//   handleClick(i) {\n//     const squares = this.state.squares.slice();\n//     squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n//     this.setState({ squares: squares, xIsNext: !this.state.xIsNext });\n//   }\n\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.state.squares[i]}\n//         onClick={() => this.handleClick(i)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     const status = \"Next player: X\";\n\n//     return (\n//       <div>\n//         <div className=\"status\">{status}</div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends Component {\n//   render() {\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{/* status */}</div>\n//           <ol>{/* TODO */}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n\n    // this.onSearchField = this.onSearchField.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  onSearchField = e => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox place=\"Search monsters\" handleChange={this.onSearchField} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n//==============================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// import React from 'react'\n// import ReactDOM from 'react-dom'\n// import {images} from './assets/images'\n// import {Gallery, GalleryImage} from 'react-gesture-gallery'\n\n// const INITIAL_INDEX = 0\n\n// function App() {\n//     const [index, setIndex] = React.useState(INITIAL_INDEX)\n\n//     React.useEffect(() => {\n//         const interval = setInterval(() => {\n//             if(index === images.length -1) {\n//                 setIndex(INITIAL_INDEX)\n//             } else {\n//                 setIndex(index + 1)\n//             }\n\n//         }, 2500)\n//         return () => clearInterval(interval)\n//     }, [index])\n\n//     return (\n//         <Gallery\n//             style={{\n//                 height: '100vh',\n//                 width: '100vw',\n//                 background: 'black'\n//             }}\n//             index={index}\n//             onRequestChange = {i => {\n//                 setIndex(i)\n//             }}\n//         >\n//            {images.map(image => (\n//             <GalleryImage objectFit=\"contain\" src={image} />\n//            ))}\n//         </Gallery>\n//     )\n// }\n\n// const rootElement = document.getElementById('root')\n// ReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}